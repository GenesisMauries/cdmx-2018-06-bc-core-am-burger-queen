{"version":3,"sources":["serviceWorker.js","components/menu/menu.js","components/Choose.js","components/Nav.js","components/Login.js","components/App.js","index.js"],"names":["Boolean","window","location","hostname","match","menu","desayuno","costo","tipo","comida","Choose","datas","console","log","_this2","this","react_default","a","createElement","type","className","onClick","data","Component","Nav","props","href","id","src","userPhoto","width","height","alt","userName","out","components_Choose","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Login","state","isSingedIn","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","callbacks","signInSucess","componentDidMount","onAuthStateChanged","user","_this","setState","components_Nav","currentUser","displayName","photoURL","signOut","StyledFirebaseAuth_default","firebaseAuth","App","components_Login","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1c3b7c22.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const menu =[{ desayuno:[\r\n{\r\n    desayuno : \"Café americano\",\r\n    costo : 5.00,\r\n    tipo: \"Desayuno\"\r\n},\r\n{\r\n    desayuno :\"Café con leche\" ,\r\n    costo : 7.00,\r\n    tipo: \"Desayuno\"\r\n},\r\n{\r\n\r\n    desayuno:\"Sandwich de jamón y queso\",\r\n    costo: 10.00,\r\n    tipo: \"Desayuno\"\r\n},\r\n{\r\n    desayuno:\"Jugo natural\", \r\n    costo: 7.00,\r\n    tipo: \"Desayuno\"\r\n}]},\r\n{comida:[\r\n{\r\n    comida:\"Hamburguesa sencilla Pollo\",\r\n    costo: 10.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n   comida: \"Hamburguesa sencilla Res\", \r\n   costo: 10.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n    comida:\"Hamburguesa sencilla Vegetariana\", \r\n    costo: 10.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n    comida:\"Hamburguesa doble Pollo\", \r\n    costo: 15.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n    comida:\"Hamburguesa doble Res\",\r\n    costo: 15.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n    comida:\"Hamburguesa doble Vegetariana\",\r\n    costo: 15.00,\r\n    tipo: \"Comida\"\r\n}\r\n    ,\r\n{\r\n    comida:\"Refresco chico 500ml\", \r\n    costo: 7.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n    comida:\"Refresco grande 750ml\", \r\n    costo: 7.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n    comida:\"Agua chica 500ml\",\r\n    costo: 5.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n    comida:\"Agua grande 750ml\",\r\n    costo: 8.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n    comida:\"Papas fritas\", \r\n    costo: 5.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n    comida:\"Aros de cebolla\",\r\n    costo: 5.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n    comida:\"Huevo\",\r\n    costo: 1.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n    comida:\"Queso\", \r\n    costo: 1.00,\r\n    tipo: \"Comida\"\r\n},\r\n{\r\n    comida:\"Tocino\", \r\n    costo: 1.00,\r\n    tipo : \"Comida\"\r\n}]}];\r\n\r\nexport default menu;\r\n\r\n","import React, { Component } from 'react';\r\nimport data from './menu/menu.js'\r\n\r\n\r\nclass Choose extends Component {\r\n \r\n  desayuno = (datas) => {\r\n    console.log(datas);\r\n\r\n  }\r\n\r\n  comida = (datas) => {\r\n    console.log(datas);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <button type=\"button\" className=\"btn btn-warning btn-lg\" onClick={() => this.desayuno(data[0])} >Desayuno</button>\r\n          <button type=\"button\" className=\"btn btn-warning btn-lg\" onClick={() => this.comida(data[1])}>Comida</button>\r\n        </div>\r\n        <div className=\"card row align-items-center col col-lg-2 \">\r\n          <div className=\"card-body\">\r\n            <h5 className=\"card-title\">BurgerQueen</h5>\r\n            <h6 className=\"card-subtitle mb-2 text-muted\">Orden N°915</h6>\r\n            <p className=\"card-text\">Aqui tú orden</p>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Choose;","import React from 'react';\r\nimport './css/Nav.css';\r\nimport Choose from './Choose'\r\n\r\n\r\nconst Nav = props => {\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-light bg-light\">\r\n        <a className=\"navbar-brand\" href=\"#top\">\r\n          <img id = 'photo' src={props.userPhoto} width=\"40\" height=\"40\" alt=\"fotoDePerfil\" />\r\n          {props.userName}\r\n        </a>\r\n        <button type=\"button\" className=\"btn btn-secondary\" onClick={props.out}>Salir</button>\r\n      </nav>\r\n      <Choose/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\nimport firebase from 'firebase'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth' // Da directamente los botenes y el acceso a la utenticacion y StyledFirebaseAuth redireccina al inicio de sesion y se liga directamente con css\r\nimport Nav from './Nav'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './css/App.css';\r\nimport './css/Login.css'\r\n\r\n\r\nfirebase.initializeApp({\r\n  apiKey: \"AIzaSyBCu6E1u8eLveoO4RNeXkBdEbKVQfy8KXw\",\r\n  authDomain: \"ejerciciocrud.firebaseapp.com\",\r\n  databaseURL: \"https://ejerciciocrud.firebaseio.com\",\r\n  projectId: \"ejerciciocrud\",\r\n  storageBucket: \"ejerciciocrud.appspot.com\",\r\n  messagingSenderId: \"430144992013\"\r\n});\r\n\r\n\r\nclass Login extends Component {\r\n  state = { isSingedIn: false }\r\n  uiConfig = {\r\n    signInFlow: 'redirect',\r\n    signInOptions: [\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID\r\n      //   firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n      // firebase.auth.EmailAuthProvider.PROVIDER_ID\r\n      //   firebase.auth.GithubAuthProvider.PROVIDER_ID,\r\n      //   firebase.auth.PhoneAuthProvider.PROVIDER_ID\r\n    ],\r\n    callbacks: {\r\n      signInSucess: () => false\r\n    }\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.setState({ isSingedIn: !!user })\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\" >\r\n        {this.state.isSingedIn ? (\r\n          <div>\r\n            <Nav userName={firebase.auth().currentUser.displayName} userPhoto={firebase.auth().currentUser.photoURL} out={() => firebase.auth().signOut()} />\r\n          </div>\r\n        ) : (\r\n            <StyledFirebaseAuth\r\n              uiConfig={this.uiConfig}\r\n              firebaseAuth={firebase.auth()}\r\n            />\r\n          )}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\nimport './css/App.css';\nimport Login  from './Login'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n       <Login />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n// eslint-disable-next-line\nimport $ from 'jquery';\n// eslint-disable-next-line\nimport Popper from 'popper.js';\nimport './index.css';\nimport App from './components/App.js';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}